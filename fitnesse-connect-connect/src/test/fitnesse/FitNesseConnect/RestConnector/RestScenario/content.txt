!2 REST Scenario - Fixture documenation and tests
!4 Purpose
REST Scenario fixture allows multiple invokes and reusing response data. It helps to mimic a use case realization interaction.
!4 Usage
 * create a script table with '''rest scenario''' fixture and pass the ''configuration name'' and ''resource uri''
 * invoke one of the followgin actions
  * ''get resource'': retrieves the specified resource
  * ''post resource'':
  * ''put resource'':
  * ''delete resource'':
  * ''patch resource'':
 * evaluate the response with the following methods
  * check response status: compares the last action's response with the given expected status value
  * show response body: displays the response
!define ConfigurationName (fitnesse-connector)
!define ResourceUri (cars)

|script: rest scenario | ${ConfigurationName} | ${ResourceUri} |
|get resource||
|check|response status|200|
|show|response body|
|$allCarsJson=|response body|
|get resource;|invalidId|''this id is not a valid car id''|
|check|response status|400|
|show|response body|
|get resource;|100|''car with this id doesn't exists''|
|check|response status|404|
|check|response body property|$['id']|CAR_NOT_FOUND|
|show|response body|

!|verify json properties|$allCarsJson|
|property|data type|is mandatory|not null|verify property?|description|
|$['id']| Integer | yes | yes | pass | car identifier |
|$['color']| String | no | no | pass | color of the car |
|$['description']| String | no | no | pass | a textual property |
|$['make']| String | yes | yes | pass | manufacturer of the car |
|$['model']| String | yes | yes | pass | model of the car |
|$['imageUrl']| String | no | no | pass | image of the car |
|$['year']| Integer | no | no | pass | production year |


''Please note that you can take a look into the test services by following this [[link][${TestServerUrl}]].''
