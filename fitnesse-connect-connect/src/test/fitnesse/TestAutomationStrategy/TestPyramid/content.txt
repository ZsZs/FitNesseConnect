!2 Test Pyramid
It is well known that - theoretically - it is possible to spend endless effort on testing on the other hand every development effort has limited resources for tests. Therefore it is extremely important to use our testing resources wisely. The last decade experiences also showed that very often the investment in test automation generates sawing in the long run.
One very important experience of the the last decade, that manual testing if very expensive and slow. On the other hand automated tests are cheaper and they give feedback much faster than manual testing. Regarding the expense and feedback time even automated tests differ. At the high cost, low feedback end are the automated UI tests. Even worse, automated UI tests are very fragile as the UI tends to change frequently. On the other hand unit tests runs fast and easy to implement them. The “Test automation pyramid” conveys the message, that the test coverage and test automation effort should be invested mainly in unit- component tests, less to integrated functional tests and even less into automated ui tests. Manuel UI test should be more exploratory test (if the test coverage of automated tests is high). 

!img -w 800 http://files/TestAutomationStrategy/TestingPyramid.jpg

To put it simple, the test pyramid says certainly more time and energy should be invested into unit and component testing, than UI testing. The middle layer: “Functional Test” is a kind of trade-off. While unit tests are testing only very small chunk of the functionality and UI tests are highly distorted by the user experience, functional tests target directly the logic of a given use case of an integrated application. Very often the “middle layer” functional test provides the best return of investment, i.e. it’s, quite easy to define and implement them, while it verifies important quality attributes.  